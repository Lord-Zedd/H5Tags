<!-- This is a mockup plugin with original field names and such -->
<!-- Made by Zedd lol -->
<plugin>
	<_field_int64_integer name="vtable space*~!" />
	<_field_struct name="internal struct" srcguid="151d0146-479c-181f-3970-ec869043bc33">
		<_field_long_integer name="global tag ID!" />
		<_field_pad name="local tag handle!~" length="4" />
	</_field_struct>
	<_field_explanation name="Damage Reporting Display Map">This tag is used to define a map from unique damage identifier to display information. A unique damage identifier has three parts: Damage Source, Attachment List, and Damage Type. When trying to look up the display information for a damage identifier, here is how the map works:

1) Search for a damage source block that matches the damage source in the damage identifier. If one is not found, fall back on a damage source block that does not specify a specific source (source left blank). If no fallback exists, fail.

2) Search for an attachment list block in the chosen damage source block that matches the attachment list in the damage identifier. If one is not found, fall back on an attachment list block that does not specify a specific attachment list (attachment list is empty). If no fallback exists, fail.

3) Search for a damage type block in the chosen attachment list block that matches the damage type in the damage identifier. If one is not found, fall back on a damage type block that does not specify a specific type (type left blank). If no fallback exists and we have not already tried step 4, go to step 4. If we've already tried step 4, fail.

4) If we matched on source and attachment list, but could not match on type and had no fallback, look for a damage source block that has a blank damage source and go to step 2 with that damage source already chosen (as if we had gone to the fallback option in step 1.

So, for example, an entry with the damage source "assault_rifle", only a blank attachment list, and only a blank damage type would be used for any and all damage caused by assault rifles. If you wanted to a display uniquely for assault rifle bullet kills you would add a damage type block under assault rifle, any attachments. If you wanted a display for a melee kill by any weapon, you would add an empty damage source block, add an empty attachment list block to that, and then add a block for the melee damage type. Then, for all weapons that you don't have a unique melee kill/damage display for, make sure that you don't have a blank damage type block for that weapon and you'll use the generic melee kill display via step 4 above.

IMPORTANT: The algorithm will NOT handle duplicate blocks on the same level of the tree correctly. The rule of thumb is that you should never have two entries in a single dropdown menu with the same name.

If you have questions please seek out the engineer in charge of the damage reporting system.</_field_explanation>
	<_field_block_64 name="damageDisplayMap" max="1024" srcguid="85b2e221-4557-ee8f-b446-f7bd80156dcf" srcName="DamageDisplayByDamageSourceBlock">
		<_field_custom name="Damage Source" />
		<_field_explanation name="Explanation">Damage source associated with all of the display definitions defined in the attachment list and damage type blocks. If you leave the damage source empty then the displays defined in the blocks below will be used for any damage sources that do not have content explicitly defined here.</_field_explanation>
		<_field_struct name="damageSource" srcguid="fb19cd2f-4e62-491e-2c71-5b8fcdcaa19d">
			<_field_explanation name="NOTE">If the dropdown menu is empty, run the "build damage reporting table" tool command (build-damage-reporting-table from the command line) in order to generate the xml file used to populate the menu. If you added a new damage source you will need to run this command in order for the source to show up in the menu.</_field_explanation>
			<_field_string_id name="Damage Source Name" />
		</_field_struct>
		<_field_block_64 name="displayByAttachmentList" max="50" srcguid="086bb4fe-482d-4cf8-a12a-10acf8e9fb45" srcName="DamageDisplayByAttachmentListBlock">
			<_field_custom name="Attachment List" />
			<_field_explanation name="Explanation">Attachment list associated with the display definitions defined in the damage types block. If you leave the attachment list empty then the displays defined in the damage type blocks below will be used for any attachment lists that do not have content explicitly defined here.</_field_explanation>
			<_field_block_64 name="attachmentList" max="8" srcguid="88131fd8-42b5-e814-256e-7ebe17d5287f" srcName="AttachmentNameListBlock">
				<_field_custom name="Attachment Name" />
				<_field_explanation name="Explanation">Name of the attachment. Make sure you don't leave any invalid entries in the list!</_field_explanation>
				<_field_struct name="attachmentName" srcguid="aa24f8d7-49b6-d12c-5382-79b814679955">
					<_field_explanation name="NOTE">If the dropdown menu is empty, run the "build damage reporting table" tool command (build-damage-reporting-table from the command line) in order to generate the xml file used to populate the menu. If you added a new attachment name you will need to run this command in order for the name to show up in the menu.</_field_explanation>
					<_field_string_id name="Attachment Name" />
				</_field_struct>
			</_field_block_64>
			<_field_block_64 name="displayByDamageType" max="10" srcguid="97c40a67-4dbe-93dd-a9f7-ffbc507d24bc" srcName="DamageDisplayByDamageTypeBlock">
				<_field_custom name="Damage Type" />
				<_field_explanation name="Explanation">Damage type described by this display definition. If you leave this blank then this display will be used for any damage types that do not have content explicitly defined here.</_field_explanation>
				<_field_struct name="damageType" srcguid="bb9b9488-4096-c2aa-ae76-608081711e6f">
					<_field_explanation name="NOTE">If the dropdown menu is empty, run the "build damage reporting table" tool command (build-damage-reporting-table from the command line) in order to generate the xml file used to populate the menu. If you added a new damage type you will need to run this command in order for the type to show up in the menu.</_field_explanation>
					<_field_string_id name="Damage Type Name" />
				</_field_struct>
				<_field_struct name="displayDefinition" srcguid="038ec4e8-4524-041b-328d-b09895bef241">
					<_field_string_id name="display name#friendly name for the damage" />
					<_field_tag_reference_64 name="sprite sheet#sprite sheet that contains the sprite for this damage" validtags="bitm" />
					<_field_long_integer name="sprite index#index in the sprite sheet of the sprite for this damage" />
				</_field_struct>
			</_field_block_64>
		</_field_block_64>
	</_field_block_64>
	<_field_pad name="pad" length="4" />
</plugin>